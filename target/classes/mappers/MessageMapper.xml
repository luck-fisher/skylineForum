<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD com.Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.class1.boot.dao.mappers.MessageMapper">
    <sql id="selectMessageColumn">
        id,from_id,to_id,conversation_id,content,status,create_time
    </sql>

    <sql id="insertMessageColumn">
        from_id,to_id,conversation_id,content,status,create_time
    </sql>

    <insert id="addMessage" parameterType="Message" keyProperty="id">
        insert into message(<include refid="insertMessageColumn"/>)
        values(#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <update id="updateStatus">
        update message
        set status = #{status}
        <where>
            <if test="conversationId!=null">
                conversation_id = #{conversationId}
            </if>
                and id in
                <foreach collection="ids" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
        </where>
    </update>

    <select id="getMessageList" resultType="java.util.Map">
        select <include refid="selectMessageColumn"/>
        from message
        where id in(
            select max(id)
            from message
            where status!=2
            and from_id!=1
            and (from_id=#{userId} or to_id = #{userId})
            group by conversation_id
        )
        order by id desc
    </select>

    <select id="getMessageRows" resultType="java.lang.Integer">
        select count(id)
        from message
        where id in(
            select max(id)
            from message
            where status!=2
            and from_id!=1
            and (from_id=#{userId} or to_id = #{userId})
            group by conversation_id
        )
    </select>

    <select id="getAllLetter" resultType="com.class1.boot.pojo.Message">
        select <include refid="selectMessageColumn"/>
        from message
        where status != 2
        and conversation_id = #{conversationId}
        order by id desc
    </select>

    <select id="getLetterRows" resultType="java.lang.Integer">
        select count(id)
        from message
        where status != 2
        and conversation_id = #{conversationId}
    </select>

    <select id="getNewLetter" resultType="java.lang.Integer">
        select count(id)
        from message
        where status = 1
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>
    <select id="getNewNoticeMessageCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where from_id = 1
        and status = 1
        and to_id = #{userId}
        <if test="topic != null">
            and conversation_id = #{topic}
        </if>
    </select>
    <select id="getAllNoticeMessageCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where from_id = 1
        and status != 2
        and to_id = #{userId}
        and conversation_id = #{topic}
    </select>
    <select id="getLastNoticeMessage" resultType="com.class1.boot.pojo.Message">
        select <include refid="selectMessageColumn"></include>
        from message
        where id =
        (
            select max(id)
            from message
            where to_id = #{userId}
            and status != 2
            and from_id = 1
            and conversation_id = #{topic}
        )
    </select>
    <select id="getMessageByTopic" resultType="com.class1.boot.pojo.Message">
        select <include refid="selectMessageColumn"></include>
        from message
        where to_id = #{userId}
        and from_id = 1
        and status != 2
        and conversation_id = #{topic}
    </select>

</mapper>